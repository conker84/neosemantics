¦type¦qualified name¦signature¦description
¦procedure¦n10s.inference.getRels¦n10s.inference.getRels(node :: NODE?, rel :: STRING?, params = {} :: MAP?) :: (rel :: RELATIONSHIP?, node :: NODE?)¦n10s.inference.getRels(node,'rel', { relDir: '>'} ) - returns all relationships of type 'rel' or its subtypes along with the target nodes.
¦procedure¦n10s.inference.nodesInCategory¦n10s.inference.nodesInCategory(category :: NODE?, params = {} :: MAP?) :: (node :: NODE?)¦n10s.inference.nodesInCategory('category') - returns all nodes connected to Node 'catNode' or its subcategories.
¦procedure¦n10s.inference.nodesLabelled¦n10s.inference.nodesLabelled(label :: STRING?, params = {} :: MAP?) :: (node :: NODE?)¦n10s.inference.nodesLabelled('label') - returns all nodes with label 'label' or its sublabels.
¦function¦n10s.inference.hasLabel¦n10s.inference.hasLabel(node :: NODE?, label :: STRING?, params = {} :: MAP?) :: (BOOLEAN?)¦n10s.inference.hasLabel(node,'label',{}) - checks whether node is explicitly or implicitly labeled as 'label'.
¦function¦n10s.inference.inCategory¦n10s.inference.inCategory(node :: NODE?, category :: NODE?, params = {} :: MAP?) :: (BOOLEAN?)¦n10s.inference.inCategory(node, category, {}) - checks whether node is explicitly or implicitly in a category.
